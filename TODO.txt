сделать парсеры переключаемыми в рантайме - так чтобы из одной строки можно было распарсить два мотива разных форматов.
Сделать человеческое лицо созданию парсера для неизвестного формата -- то что сейчас выглядит как PM.choose_parser(input).new(input).parse

сделать так, чтобы матрица в которой есть строка/столбец заголовок `A С G T` тоже читалась парсером
сделать читаемым pretty_print-формат
сделать читаемым транспонированный pretty-print

Должен ли класс PPM содержать words_count (или weight)?

исправить спеки под *nix-ом

сделать cleanup переменной @input парсера

!!! добавить тесты оператора PM#==

Подумать о формате для PPM, чтобы был парсер принимал матрицу и каунт.


описать спеками поведение has_one_key? в случае, когда ключи повторяются. Что в этом случае правильно делать true или false?

спеки для YAML.dump_file. Должен ли он работать только с filename или с IO тоже
А быть может YAML.dump должен принимать строку?



возможно так:

Переделать lines.map{|line| line.split.map(&:to_f)} --> lines.map(&:split | &:map.(&:to_f))  -- вообще, стоит посмотреть, как оно в книге Матца сделано
Переделать

matrix.all?{|line| line.size == 4}  ==>   matrix.all?(&:size | :== 4)  ==> matrix.all? (&:size | :eq.(4) )
или просто matrix.all?(&:size.() == 4) т.к. :size().() - это объект, и ему можно определить method_missing proxy

попробовать унести callable_symbol в библиотеку функциональных расширений руби

def itself;self;end

стоит ли переделать has_all_keys? через Set#&

can_parse? и parse дублируют код. can_parse? переписать через `parse rescue false` и сделать кэширование рез-та парсинга

Сделать спеки на probabilities, а также score_variance и gauss_estimation

???!!! КЭШИРОВАНИЕ СУФФИКСОВ итп
проверить кэширование. Отрефакторить в rails-style: 
cache :worst_suffix, obsolete: [:discrete!, :background!, :]